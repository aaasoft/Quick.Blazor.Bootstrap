<li class="@Tree.TreeLiClass @(IsSelected?"active":"")" @onclick="@(()=>Tree.SelectedNode=this)" @ondblclick="@(()=>Tree.OnTreeNodeDblClick(this))">
    @for (var i = 0; i < Level; i++)
    {
        <span class="indent"></span>
    }
    @if (Tree.IsLeafExpression == null || !Tree.IsLeafExpression.Invoke(this))
    {
        <span @onclick="@(()=>Expand(!IsExpanded))">
            <i class="@(IsExpanded?Tree.ArrowDownIconClass:Tree.ArrowRightIconClass)" style="min-width:1rem;"></i>
        </span>
    }
    else
    {
        <span style="margin-left:1rem;"></span>
    }
    @if (Tree.ShowIcon)
    {
        <span class="ml-1">
            <i class="@Tree.IconExpression?.Invoke(this)"></i>
        </span>
    }
    <span class="ml-1">@Tree.TitleExpression?.Invoke(this)</span>
</li>
@if (IsExpanded && children != null)
{
    @foreach (var child in children)
    {
        <TreeNode DataItem="@child"
          Level="@(Level+1)"
          Tree="@Tree"
          ParentNode="this"
          IsExpandedFirst="IsExpandedFirst" />
    }
}